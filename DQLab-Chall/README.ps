%!PS-Adobe-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.6 (Build 18G87) Quartz PS Context)
%%Title: (README)
%%Creator: (Notes: cgpdftops CUPS filter)
%%CreationDate: (Monday, September 02 2019 22:49:06 WIB)
%%For: (Faris Dzikrur)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%Pages: (atend)
%%BoundingBox: (atend)
%%EndComments
userdict/dscInfo 5 dict dup begin
/Title(README)def
/Creator(Notes: cgpdftops CUPS filter)def
/CreationDate(Monday, September 02 2019 22:49:06 WIB)def
/For(Faris Dzikrur)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *HPColorAsGray False
<</cupsColorSpace 1/cupsBitsPerColor 8/cupsColorOrder 0/cupsCompression 2/cupsRowCount 128/cupsInteger7 5/cupsInteger8 1>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPEconoMode False
<</cupsInteger10 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPNeutralGrays Black
<</cupsInteger3 4>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPPaperSource main-tray
<</MediaPosition 12>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPPrintQuality ImageREt2400
<</cupsInteger4 600 /HWResolution[600 600]>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPRGBColorMode DefaultSRGB
<</cupsInteger5 1>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
<</PageSize[595 842]/ImagingBBox null>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType unspecified
<</MediaType(auto)>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPManualDuplexSwitch False
<</cupsInteger6 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPManualDuplexPrintGuide False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPManualDuplexOrientation DuplexNoTumble
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPBookletFilter False
<</cupsInteger9 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmSwitch False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPBookletBackCover False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPBookletPageOrder False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmBrightness Medium
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPBookletScaling Proportional
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmTextColor Black
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmFontSize pt48
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmTextMessage Draft
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmTextStyle Medium
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmFontName HelveticaB
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmTextAngle Deg45
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPwmPages AllPages
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *HPEasyColor True
%%EndFeature
} stopped cleartomark
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: MBGOAB+.SFNSText
%!FontType1-1.0: MBGOAB+.SFNSText 1.0000.1.0000
14 dict begin/FontName /MBGOAB+.SFNSText def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid8 put
dup 34 /gid4 put
dup 35 /gid2 put
dup 36 /gid3 put
dup 37 /gid6 put
dup 38 /gid5 put
dup 39 /gid15 put
dup 40 /gid19 put
dup 41 /gid16 put
dup 42 /gid1 put
dup 43 /gid7 put
dup 44 /gid25 put
dup 45 /gid10 put
dup 46 /gid23 put
dup 47 /gid32 put
dup 48 /gid14 put
dup 49 /gid24 put
dup 50 /gid21 put
dup 51 /gid29 put
dup 52 /gid22 put
dup 53 /gid31 put
dup 54 /gid11 put
dup 55 /gid20 put
dup 56 /gid18 put
dup 57 /gid12 put
dup 58 /gid27 put
dup 59 /gid13 put
dup 60 /gid17 put
dup 61 /gid9 put
dup 62 /gid26 put
dup 63 /gid30 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -873 1 index div -615 2 index div 2699 3 index div 2205 5 -1 roll div]cvx def
/sfnts [<

B7000000B40000016B00CB010500000000FEFFFF330000FF5BFF29FF5B00B4013E009D00A700000000FF56FF66FEC20000000000000000000005A3FA5D0000020300000000010300CA00CE010500000000000000000000FF6000000000FF62FF6BFF71FF62000000000000007B00B500B5007B00000200B7000004D605A3000D002200004101000001000001010000000001010100000101010100000100000101010100000001016B015B008C009E00000000FF69FF75FE9D0000000000000000000000000163000000000000013500D3FEB20088009A00000000FF05FF2FFDD9000000B40000000000000000050300000000FF6EFF7EFF7BFF71000000000000007000A400A40070FD380000000000000000FDC500000257002B00DC009700C300EB00000000FA5D0000000000AC00E300AC4900020061FFED03CD04490009002400004100000100010101000001000001010101010000010000010100000100000101010001000001EDFFA2FF840000000000EC012200000000FF51FF5B006C00AC00340010000000A400000000FF2BFF3BFF54FF16FFEF00AE0012008000610079007B00000000FEC9FE770000000000CF00840000005C005200A000100013FF9DFF8DFF65FF690000005C00560000FF61000002E200A800BF00000000FF63FF7E00000040004600000000FF96FF9CFF9EFFEDFFE9FED8FF6CFF5300000200ABFFED047D05E20012001E00004100000100000100000101010101010101000001000001000001000001000002B900CD00F700000000FF0AFF32FF91FF49FFD4FFF00000FF54000000A400000010003300B70048009400A600000000FF5AFF6CFF6DFF550000000000ABFFED0000013100FD00FE013000000000FF9AFFA9000002560000FA1E000000AC0000FFA6FF9B03C10000FF2AFF43FF43FF2A0000000000D800BB00BB00D8000001006BFFED041D0449001D0000410000010000010000010000010100000100000100000100000100000001041DFFEAFF17FF3BFF1EFEF400000000010D00E200C200EA0017FF52FFE8FF6FFF93FF70FF540000000000AB00910074008D0015000000350044003502EC009000CD00000000FED2FF04FEFFFECF0000000000C400940000FFA5FF9E0000000000DC00BB00B700D800000000FF8EFFB000000000000000000002006BFFED043D05E20012001E0000410000010101010101010100000100000100000100000100000100000100000230007000B600330010000000A40000FF540000FFF1FFD2FF4DFF8FFF33FF080000000000F600F7009200AB00000000FF56FF6DFF6CFF590000000000A8FFED00000065005A0000FF54000005E20000FDAA00000059006400000000FED0FF02FF02FED003C10000FF26FF47FF45FF280000000000D600BD00BC00D7000002006BFFED



00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
/gid24 24 def
/gid25 25 def
/gid26 26 def
/gid27 27 def
/gid28 28 def
/gid29 29 def
/gid30 30 def
/gid31 31 def
/gid32 32 def
/gid33 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-873 -615 2699 2205}def
/UniqueID 4264960 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934F38FF668EBBEF4D6C91486BDB8B38803AEC7615828F0B8FDD06555459A2702FF1016C009CC125C539ACEDFE7010398110DE7110CC96C7900A71CE22FD4C0373D12F1E9CEEA584AFDB71DEFFE26CF717CC4090466668469A3EDDB5C6E8FB4B3F4873695F2C34F6FA097F0BC27FFDA1DA5E4980782F3A77F8CC1F53DBBEDBDD53E32C1CB7FB45405C34CABC77D9C87AD311B402E2DF9813686819050EBA03F849518C656DADA0DF080E6465D95CB49B25F2AF4989D1F1CFDDBD4B5CB259FF2A55E1869EC4EAADA75553FF4276B38469A9614AC38924446987D8AB99A17731B448EC105E2628463A61F57A5A492168847D22237D5AC5657A2FF6F6B26D50DF8256FD6B96F232A0AA0A9C2339F9EEFE80DAEEC0CE5ED43257AF4B98CB4A4111D45F23ECC52CDBE513D64A65A3FCFCEE66F19C0D55478E0237A5D43A3CDA94A83A4E6445D475C5F4B452781DEA972E5A45421C99112AD7F6A8E456AB2E2AD0BA9F85DDA8ADB52225764A66C7BE5960CBAE26B776A0A70A69E64DAA8CBF59724F54D06328AEFE034279EE583553D67531B4E653955B004DB91750B7B49006A6753109CF58619E5D6B444C6AEDE6A494329A4198F4B2FD424BCF00609B9D5D13AE6A58C682F5CC99095FD8C87B9CD82FB9A7AF9966216A5986C53C58211C24A0B582AE6793D665D409A35FB6181E16813A230A741544A8797CC71527FCA5CB6BE1AA2C652855C3BF1D51C3EE46D92AE9F61EA91909517204B5F82D9A8CE8EFBEF44F0B61E39B6AA6646979D84CD348FE60E4226A1CBE86
718140B18B8934F46E7F85AAE7D74C23E9A9F19A49010398607F7B7128F500306151EB894F65A12AD6779A27AB6E812836D795DA9864CE7BFA65A8E384E98A639EFA8A43772B131DB2B92693467FC6844E29AAC6874EC85D4F38D0BB4EC0E6C0BFD9344CCEC0CDF6ED1445399922B63D3DFB5DA7CDB9F886A8409ED0674D85D59628C462D980BF38C10874332A950AF182631738E798B0E16D8E4869D158A8A69F39283189E2C1F337C07E416EDA8445D13D0A7EC951F418DD5D5006CE716F6CAC4D98F882E0B3973A2634FC9BB853A983CE633AAD671DFF2276C62DB0C7B81C599A67FBC808FD5865E8E7CB48966E621D9D1779E275D426F8B9873929A63D828D779153D9E9942A00882B9DA020D95DE8E7B5AFE2A2DCCF6D4DFF1528333CCB9DC8991028F8D27285821DB171BB76F04A3AE8F29E2492841A9BD1F96F0EDD72537291C97122A0FA3FBDA33564A5E3F105888701745ADC339106E328F692763AC5B53AAB3A8D0B8B0C120B38BA25DAC2564AC49E3C89433269A398C7C87467F8D7A6BC420117C91B03D7A776710836F95B8D0435B5CC1B4243A40FAC7CCC8BAC7B201B7E78E55E8385436E94D66F28CE84883B2F1D21C4CB3813621422A3F0983E89EA8AEE256C6EE368F86D81BF99CCB2DED4A4FCCDCFEB7456BFEACC82B4E028AB8EB459E1B942DBB20DE96D9963589B8B905AB959020ADCA191A8E4D2156B7166AE8217EAD1EFA66431A4C0610A1F7FCC2640EA14996A9378DC799A788465D078AC734A0E47EB6FC1298709FDCE38D08B0A98BFCE4DBDFEBD4D1A131930EF74E186178DB2F7BC8B9EE4C2E04C2D48963771FB38A0414F6EC38D4CBEBC7A47F45CF900349370D3BDD221BFE6EE0523C6A4FCE15FD885FABE85D0CE5EAC336FA8249612253727E7AAE5E6AA4288BF59C8ACE6FDDBA8DB8B44BB90EB7741339D507DFF069EFE18810E2F2EA20F23CB332D66C7E80DC503901AE30CB4EB49BF80652ACBFB71E990475E3A0EB950436264AFE5F2D016168589368A62BF17FD27481E9F6D74EE469A3754AAA0F01BEF3F4EA5DEADA8FF3FEE5F471884F1012D48DA6EA438223D6F6C705A7851B9DADF9C829BB7E3FDE2AA6A49ADBB749765C1AA11BC9F12F8141FE077095E74B8C4F41A9A7727DBCBD5FB810A1C2CFDF73E92019F315ADD36018268D0B21D79873771DD57E0F899AF975F4E7F7FED1BB6DC98793E22748E64695C4884A84575259E6DADF41D8918A0DD7C166F94C219D74DB625ECC5A7C385007A3A8A662E804CF26DBC8F8FB39001496FABC26FF0A1A1A1D62B6386C06C4FF5FCB034097DE2C631AD49936BA57543DFBAC0F4E399BE1F3820EE4C88923436A017B085911584A9CB7417303F0053153DD647B4F3774EB27271196CDE56B0530339AFBC19BAACBFD8C05A8159B58BE6B076AB94161BC141451A2195
74393EBEC1C2AD6427E0F711C521CCA0AE208ACC3A7566CE6217A9713FC95FFBD08937065A926ED202B225C9DFB9607EEE8833EC832D40198CBDB3CCF11A8E91DF8EB9EB7D87CD51CF6A15F62ABCEEE722F1681AD5671310EEDADB5253326EF1E2FDE884D8270811AE2E3511BA401AC50F55964CA919351BF3F8FC9406E1669D3DD1A7231FFC2900C62426A01F8562B6EB9AAF23362CA67F2684A6B02EC83BCE5AC5B7FFF120B7B324B68687BF33263431AC8804583998A7076305E04EBEE5907BFFB93E943B12DDAA28A920080DE5322B395C189C69121C0650C80963A93FD85FD6517F066982E1D8C6971802B2B1EF44FF0C4D240DEF1A6712FC43B985101358FEEF10A61B6C47EBCA0EA26F689C148ABD5819AAE83DD910A3E7E5584E7885CFCA44E25207E1271433B0E609DB484F610902784CAC8E0298EC98714594878D8C10EB5D8B10755A470FE15888270B90A2DE0FF46E61D62450F5998761DECB905A696C081A9E27A6C9BCA1A27AB777F716184654E807C04558F79BA447F382449F511E6ABCC903FD56D027F4CDB2435EA40BE1DEE4FCCD792DECC16F299F16B3768742E12BF27A99E30097A06F39C8BF32DCCC52F0D247ACB58855A9215F372460DFA18A8AD421E57F207EA15CB0C03503E753411F19DBBEB363570ED6BFAE99D892EA35AEF2B99DDB4EAD9FE9F35BDD4C571EBD89EF3872898FD862460D3A12F110581B726E6F3978FFA8A2CD88F3EDBDF6401A797EA712E09D302839A97C926B093FE1AA4C9E579E609EE6B65C9320B193F165A5AE32573E8DBD006ED339B2FEABD60E5782D618708B231138E5E22E3A9E13ACC6C9EEF8E0696DDB61D25D254AA5A068C02CABCE3C6685730A6C36344ADAE75118B753A6496A990914F3609919A446EAC624600E4BAA76825EE950C9D4E36731196D810788287AF352BAF8EDBA9051855B661AD03A97C59BBC3BA6C0FE04CB07B78466C77D9FB105915453759FB9B0736E18D12FEA972908F290BC27107F3263F2F9BAAF0B34CAF0DB6EAC2866920EBAD691FCE788201A07975E63F5F84D15B4BB6B1EA5F006BFA652B0F96E05C602117274C6B1919B4397F51C67187880A2A8AEBDDFE73A521B42B29203ED8E64958CE8ADBDEAEE18CCB632773DCE66E490364CA3E9DA44FDA9109F443F0FB99401D430DC91BC6BD24A5742D1A872D4D4BA216431C3E17BAC2A7D14E3FC6A522B25A00A2B2C8C4CD990FD9D6FAD917F93BFC31B556AF818185BE790183E98A96FA96048A1D5939B3017F27ACEE81BE5C447DBABB51C650FC1B83E079D36643C984B325B4E6B8401942DE86A2F543EDA1815DC281C7C14A317637C6FE503E740BDD71D23555CA68D85ADF3705DC06635D62A7D0B31481778AECBE77C621073D149FCDFBBB08FB041766B2D758C304B1B56AF84DC2C4CE9D510B79198A2C80A
85600E7A927D1517D1C2736E35677F132EC2DFAF345625476FEE1FB704E543A33A4E2F7D10F9DC826046B1FE2D5673CF249661793571A984013478FA5F564A5EF9012AA5EA28949AD02E287AF19903FA4AF9C9A5603B4A4BDD25BC94219AF7615199D54B53BE2C700E57C7232073DE648FCEA5F342066D6A62E044F9D21EDAE5979558394F8F0885C982CE97C138146E5AF9779492DB7EB2F083C3F60DDEC0825BFF3102658A810C5125850C60F4364E2BDA887212A4F5EE403DDCABE093A8E318559C17140209F654D1FC78A6AA96835A047D9F8F34EB389BD3466BFFAAFA69D01C98C022393C8756F8E7C88D2B17E3C093090BA40B9912127B647E4B6D7F829E1E75C6B6B2BF509B0E137C78F56BF38EB7B50DC78A75901C900C35CE943B3A0EA8C0AF9A592FA2799A75DE45B04139DB42FBD860D1E7B4289E6B9E226E856C22DE5E5C9F18A8E8A51835A46BB0BE950D4C874C4B1C1C627A1A48EC92DAE2DD19B78A977F82ADBD0EEDC861198E3E367E77091A553A7F3A950E9BD5EB9863910F0457AEABE398D52D5BA9A59BFA6A94AFC4182D70EA76E89B1952E2DF262AAB27AE3E60A0093E6DEC765EEF202B73E75BC72E2DAFF2DFD67C06A8EC739A884336803D9D17A112DF325F5F97D50FAFD24737069A97EBA848C659DCEED9B1DE45929285B4395A1A38AC1B13E8F29A52E48B26EF87441257ED059036D24FFE77167CC7A2D47625A25D2A3E44DB0A720F84CAD6CD2856094E980E38AE548AE3BDFBB312811A69BD2761DC6B49744AEF6D8C9E13C2347F73EAF3CBFFDF5DA317CD60EA3D9547D22BDE8DC95E99265C8A5B54766663A89C408713CEA2DA41F6391F511A32D5B322B231FBB8BDCDB6389468810C7BEF6AC1EA2D2D41F045DAEA743DF8B3781B9DDDA227C4229CE031DD0EFCE7F0AB1F2B3409465BFC69D9D811F6A2C0736B87077956BC1D763067EF926679982FF73A821D9E5520D857EEDEB00D90220F746AA0720637CE260258F294245B380766D35934533267C5996DD7FE70D2629834810A4B64331C9AC16AE1E2BE8882512186370D29CC44169A4F6DF027CFC5F87B5FC13279C26B823157D54080CCF5DAE6B86D877DD5C64E2C0CFF9B8129B38DBFAC775E4526C915719343A9D5454FD14E5F9596F48F2CB27D42AB22E6407B8308FFB1561107799DB43A1415E7BC78D35F09A8C6A651AF1AFB021C6C355BF6674E3D809CBB2B3FBC5166162B7BCD1B0005F3BD3848D4CA7C08DFB0530A54BAA1A13A68E32EB597E84042EBA9348390E2823A28A4336BDC87584A0C1927D4985B1977E65F3869335F895FB602800E973B743698F347CCE941078E6958FE7BCA6F51288FAB640FF7180E93B4E7F232358BB6B5CB31BB4A5C0438481915DC94636A58219C33B2EF6819F634814716854F4BC102F83F83C8B54E6E32CD2BA36E09
C796BFC55C510804D0E987293EC6B13A9AE5AEC57EC0F143CBFF8E8B02FE9D476C7799B71E1F6F09573D987FBEDD6515DA7A94CC9FD98DF2AA405B6E3C73D0121B8563D2EC5243C05530FF11D3069AD8044A43D98D248F6D72DDE273E88E6158E99440A1254D12A8673A22EE51FC66966B7A6BCD740496E2956CB293083BEB4B98243FCF941F946BC95C8133B9FFF412CF63EB3D5E09516EFCA58D9825430940DE4E339AC019DBE8D4C90FDA81B0EF2B4651C05D63866A43A9A6A3C3C66A252FECBB3A9393644D26A27EBFA94CB30F0222831E9A50153C19FDEE4E2B8418CE373E1E62BCD22E59C516BAB901ACE2228E215291288EC87DC8F3528D7022596F350E58EEAF75C6AFE73AAC1629E6878CF37932970B51FFFC8DF89609C38B5B2CE43298F2E3BEAA3F342403F1F12A838DA410289CFC0B00A2D7CB7E81F38BC7CB287E794AD6EFF3C22D0DB91D15E6EAD2EB12444678312D481FAAA86870D394F00C8F828302DE44E73D5DED53C634DD8A5CDBF67D6F5462A415CD428FA4DD991A2A8272C430CEAC59419A1BC20C64FEDBD539AE22B0AA0D7B6F2BC62482BDFFFE3FADACA0AC81FDCDDA1419E82173C1CA8F8C58C1B1FB50076E1BFB16CADB24873CDA16686ABEFAD36C55E5932133146CB52B006B7C2BEE358A8853523B8C5E949781A7C1A166991E31E2B7E9A2194C8CB01316C0E2C44B2C2964165989CE66068092CC9F1AAFF5AFCA766DF5EB17CD2F62E9A685C86097EEAD940BF726D77108926713D74E249D4577241393A46501E879B015983DE6B8E3F88C8A6125D9284CA8A041CB76C370D6DC66C61047874B619FDDBA531D4D2A01210947DFA846A179565D2902020BCD79A93F88295D58AFFB0579DDABF72A6963BF360FC050CB81754EC99A2558A7A1FA8E8D9DBCF3B6636231F3787F19457CE4492D689EB3ED059D5814E0EE6C12114E5EE1A1873DB2EE602FA911ADB93CDCA6F929C7A75C1FFBD0C392F7804F28AAB2A457024483747AF1A89677E0D880D8B83D89E77949F609E795BB66E145ABE32FE628ADFD2318E6EB65C6FC61B3EF8C054F0639A5504F03A84C67C5E9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/MBGOAB+.SFNSText cguidfix
/F1.1/MBGOAB+.SFNSText renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
54 200.0724 487 587.92761 rc
54 788 m
541 788 l
541 200.0724 l
54 200.0724 l
h
f
Q
0.27058819 0.27058819 0.27058819 sc
q
55.959759 200.0724 483.08051 556.57141 rc
0.97987932 0 0 -0.97987932 54 788 cm
/F1.1[ 12 0 0 -12 0 0]sf
23 44 m
(!"#$%")[ 7.839600 7.148400 8.085600 8.719200 10.488000 0.000000 ] xS
23 76 m
(&'\(\)*!+,-./)[ 6.814800 2.953200 7.002000 6.516000 3.386400 7.839600 7.623600 7.008000 7.371600 6.280800 0.000000 ] xS
1.020534 w
0.89411759 0.68627453 0.039215691 sc
23 109.7074 m
38.84375 109.7074 l
S
41.81546 109.7074 m
49.71875 109.7074 l
S
51.814209 109.7074 m
53.71484 109.7074 l
S
55.810299 109.7074 m
62.398441 109.7074 l
S
65.37014 109.7074 m
117.9453 109.7074 l
S
120.0408 109.7074 m
187.8652 109.7074 l
S
189.96069 109.7074 m
285.6348 109.7074 l
S
288.60651 109.7074 m
340.91211 109.7074 l
S
23 108 m
(0112/3342,-.567839:;<4=08=\(3>'.,=<'.=.'?9=1=?2;4'\)=\(=\()[ 7.124400 4.359600 4.359600 7.312800 3.562800 3.996000 3.996000 4.687200 7.312800 7.008000 7.371600 6.280800 3.327600 6.715200 7.089600 10.441200 3.996000 7.371600 6.292800 6.855600 3.024000 4.570800 6.621600 7.124400 10.441200 6.621600 7.002000 3.996000 6.504000 2.953200 6.280800 7.008000 6.621600 3.024000 2.953200 6.280800 6.621600 6.280800 2.953200 5.660400 7.371600 6.621600 4.359600 6.621600 5.660400 7.312800 6.855600 4.570800 2.953200 6.339600 6.621600 7.002000 6.621600 0.000000 ] xS
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%EOF
